{"version":3,"sources":["Component/Navbar.js","Component/TextForm.js","Component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","Title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlfor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","charAt","substr","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","length","defaultProps","About","Alert","alert","Type","msg","App","setMode","setalert","message","setTimeout","body","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c9ec479d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.Title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"/\">{props.Title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">About Us</Link>\r\n            </li>  */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label \" htmlfor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    Title: PropTypes.string,\r\n    About: PropTypes.string,\r\n}\r\n\r\nNavbar.defaultProps={\r\n    Title: 'Set title here',\r\n    About: 'About Us'\r\n};","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpCLick = ()=>{\r\n        // console.log(\"Uppercasewas clicked\" + text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\", \"Success\");\r\n    }\r\n    const handleLowCLick = ()=>{\r\n        // console.log(\"Uppercasewas clicked\" + text);\r\n        let newText= text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowerrcase!\", \"Success\");\r\n\r\n    } \r\n    const handleclearCLick = ()=>{\r\n        let newText= ('');\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"Success\");\r\n    } \r\n    const handleTitleCase = ()=>{\r\n        let newText = (text.charAt(0).toUpperCase() + text.substr(1).toLowerCase());\r\n        setText(newText);\r\n    } \r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        let text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newtext = text.split(/[ ]+/);\r\n        setText(newtext.join(\" \"))\r\n        props.showAlert(\"Extra spaces removed\", \"success\");\r\n        }\r\n        \r\n\r\n    const [text, setText] = useState('');\r\n    // setText(\"Your Text here\");  //Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                {/* <label for=\"mybox\" class=\"form-label\">Example textarea</label> */}\r\n                <textarea className=\"form-control\" value={text} onChange={ handleOnChange } style={{backgroundColor: props.mode==='dark'?'#042743':'white', color: props.mode==='dark'?'white':'black'}} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={ handleUpCLick }>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={ handleLowCLick }>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={ handleclearCLick }>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 mt-1\" onClick={ handleTitleCase }>Title case</button>\r\n            <button className=\"btn btn-primary mx-1 mt-1\" onClick={ handleCopy }>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1 mt-1\" onClick={ handleExtraSpaces }>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} character</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n            <h2>Preveiew</h2>\r\n            <p>{text.length>0 ? text:\"Enter Something First\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert && <div className=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{props.alert.Type}</strong> : {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './Component/About';\nimport Navbar from './Component/Navbar';\nimport TextForm from './Component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './Component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setalert] = useState(null);\n  const showAlert =(message, type)=>{\n       setalert({\n         msg : message,\n         Type: type\n       })\n       setTimeout(() => {\n         setalert(null);\n       }, 2000);\n  }\n  const toggleMode =()=>{\n   if (mode ==='light'){\n     setMode('dark');\n     document.body.style.backgroundColor = '#042743';\n     showAlert(\"Dark Mode has been enabled\",\"Success\");\n     document.title = \"TextUtils - Dark Mode\";\n   } \n   else{\n     setMode('light');\n     document.body.style.backgroundColor = 'white';\n     showAlert(\"Light Mode has been enabled\",\"Success\") \n     document.title = \"TextUtils - Light Mode\"; \n   }\n  }\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar Title=\"Textutils\" mode={mode} toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n        <div className=\"container my-5\">\n            {/* <Switch>\n              <Route exact path=\"/about\">\n                <About/>\n              </Route> */}\n              {/* <Route exact path=\"/\"> */}\n                <TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>\n              {/* </Route> */}\n              {/* <Route path='/about' element={<About/>} />\n              <Route path='/' element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze\" mode={mode}/>} /> */}\n            {/* </Switch>    */}\n        </div>\n    {/* </Router> */}\n    \n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}